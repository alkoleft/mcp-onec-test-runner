name: Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build-artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build JAR
        run: ./gradlew bootJar --no-daemon

      - name: Copy JAR to project root for Docker
        run: cp build/libs/mcp-yaxunit-runner-*.jar mcp-yaxunit-runner.jar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcp-yaxunit-runner-jar
          path: mcp-yaxunit-runner.jar

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: ['17', '21']
    permissions:
      contents: read
      checks: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport --no-daemon

      - name: Check code style
        run: ./gradlew ktlintCheck --no-daemon
        continue-on-error: true

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            build/test-results/**/*.xml

      - name: Add coverage to PR
        if: github.event_name == 'pull_request'
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60

      - name: Upload coverage reports to Codecov
        if: matrix.java-version == '17'
        uses: codecov/codecov-action@v3
        with:
          file: ./build/reports/jacoco/test/jacocoTestReport.xml
          fail_ci_if_error: false
          verbose: true

  dependency-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run dependency vulnerability check
        run: ./gradlew dependencyCheckAnalyze --no-daemon
        continue-on-error: true
      - name: Upload SARIF to GitHub Security
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: build/reports/dependency-check-report.sarif
        continue-on-error: true

  build-docker:
    runs-on: ubuntu-latest
    needs: build-artifact
    if: github.event_name == 'push'
    strategy:
      matrix:
        dockerfile: ['Dockerfile.sse', 'Dockerfile.stdio']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: mcp-yaxunit-runner-jar

      - name: Copy JAR to project root for Docker
        run: cp mcp-yaxunit-runner.jar mcp-yaxunit-runner-test.jar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: false
          tags: mcp-yaxunit-runner:test-${{ matrix.dockerfile == 'Dockerfile.sse' && 'sse' || 'stdio' }}
          build-args: APP_VERSION=test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  code-quality:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run ktlint code analysis
        run: ./gradlew ktlintCheck --no-daemon
        continue-on-error: true
      - name: Annotate PR with ktlint results
        if: github.event_name == 'pull_request'
        uses: github/super-linter/slim@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_KOTLIN: true
          VALIDATE_GRADLE: true
        continue-on-error: true 