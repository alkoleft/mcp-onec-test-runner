name: Release & Publish

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test --no-daemon

      - name: Build application
        run: ./gradlew bootJar --no-daemon

      - name: Publish to GitHub Packages
        run: ./gradlew publish --no-daemon
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag version
        id: tag_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "VERSION=${TAG}" >> $GITHUB_OUTPUT
          echo "VERSION_NUMBER=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcp-yaxunit-runner-jar
          path: ./build/libs/mcp-yaxunit-runner-${{ steps.tag_version.outputs.VERSION_NUMBER }}.jar
          
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.VERSION }}
          name: Release ${{ steps.tag_version.outputs.VERSION }}
          body: |
            ## ðŸš€ MCP YaXUnit Runner ${{ steps.tag_version.outputs.VERSION }}
            
            ### ðŸ”„ Changes
            - Automatic release from tag ${{ steps.tag_version.outputs.VERSION }}
            
          draft: true
          prerelease: false
          files: |
            ./build/libs/mcp-yaxunit-runner-${{ steps.tag_version.outputs.VERSION_NUMBER }}.jar

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-publish
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        dockerfile: ['Dockerfile.sse', 'Dockerfile.stdio']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: mcp-yaxunit-runner-jar
      
      - name: Extract tag version
        id: tag_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "VERSION=${TAG}" >> $GITHUB_OUTPUT
          echo "VERSION_NUMBER=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            suffix=-${{ matrix.dockerfile == 'Dockerfile.sse' && 'sse' || 'stdio' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: APP_VERSION=${{ steps.tag_version.outputs.VERSION_NUMBER }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 